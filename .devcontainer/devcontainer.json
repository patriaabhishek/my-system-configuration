// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/alpine
{
    "name": "My-Garage",
    // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
    // "image": "mcr.microsoft.com/devcontainers/base:alpine-3.20"
    "dockerComposeFile": "docker-compose.yml",
    "service": "app",
    // "build": {
    // 	// Path is relative to the devcontainer.json file.
    // 	"dockerfile": "Dockerfile"
    // },
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    "containerEnv": {
        "LOCAL_WORK_DIR": "${localWorkspaceFolder}",
        "CONTAINER_WORK_DIR": "${containerWorkspaceFolder}"
        // "OPENSSL_CONF": "/etc/ssl/openssl.cnf"
    },
    "remoteEnv": {
        // the original host directory which is needed for volume mount commands from inside the container (Docker in Docker)
        "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
    },
    // Features to add to the dev container. More info: https://containers.dev/features.
    "features": {
        // Installing core linux components and packages
        "ghcr.io/devcontainers/features/common-utils:2": {},
        "ghcr.io/devcontainers/features/docker-in-docker:2": {},
        "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},
        "ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {},
        "ghcr.io/devcontainers/features/git-lfs:1": {},
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/node:1": {},
        "ghcr.io/devcontainers-extra/features/zsh-plugins:0": {},
        "ghcr.io/devcontainers-extra/features/nmap-apt-get:1": {},
        "ghcr.io/devcontainers-extra/features/fzf:1": {},
        "ghcr.io/devcontainers-extra/features/prometheus:1": {},
        "ghcr.io/devcontainers-extra/features/tmux-apt-get:1": {},
        "ghcr.io/devcontainers-extra/features/vscode-cli:1": {},
        "ghcr.io/devcontainers-extra/features/vscode-server:1": {},
        // "ghcr.io/devcontainers-extra/features/actions-runner:1": {},
        "ghcr.io/devcontainers-extra/features/bin:1": {},
        "ghcr.io/devcontainers-extra/features/devcontainers-cli:1": {},
        "ghcr.io/devcontainers-extra/features/mkcert:1": {},
        // Installing GPU
        "ghcr.io/devcontainers/features/nvidia-cuda:latest": {
            "cudaVersion": "12.6",
            "installCudnn": true,
            "installCudnnDev": true,
            "installToolkit": true
        },
        // Installing python components and packages
        "ghcr.io/devcontainers-extra/features/pipx-package:1": {},
        "ghcr.io/devcontainers-extra/features/poetry:2": {},
        "ghcr.io/devcontainers-extra/features/black:2": {},
        "ghcr.io/devcontainers-extra/features/isort:2": {},
        "ghcr.io/devcontainers-extra/features/mypy:2": {},
        "ghcr.io/devcontainers-extra/features/ruff:1": {},
        "ghcr.io/devcontainers-extra/features/flake8:2": {},
        "ghcr.io/devcontainers-extra/features/pylint:2": {},
        // Installing typescript components and packages
        "ghcr.io/devcontainers-extra/features/typescript:2": {},
        "ghcr.io/devcontainers-extra/features/tsx:1": {},
        "ghcr.io/devcontainers-extra/features/ts-node:1": {},
        "ghcr.io/devcontainers-extra/features/jest:2": {},
        "ghcr.io/devcontainers-extra/features/nestjs-cli:2": {},
        "ghcr.io/devcontainers-extra/features/prettier:1": {},
        // Installing devops components and packages
        "ghcr.io/devcontainers/features/terraform:1": {},
        "ghcr.io/devcontainers-extra/features/ansible:2": {},
        "ghcr.io/devcontainers-extra/features/cookiecutter:2": {},
        "ghcr.io/devcontainers-extra/features/tailscale:1": {},
        "ghcr.io/devcontainers-extra/features/tldr:2": {},
        // Installing youtube components and packages
        "ghcr.io/devcontainers-extra/features/ffmpeg-apt-get:1": {},
        "ghcr.io/devcontainers-extra/features/yt-dlp:2": {}
    },
    "mounts": [
        // "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",//Use this for a Linux/MacOS host
        "source=//var/run/docker.sock,target=/var/run/docker.sock,type=bind", //Use this for a Windows host. Note the extra "/" in the beginning
        "source=${env:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
        "source=${env:HOME}/.kube,target=/home/vscode/.kube,type=bind,consistency=cached",
        "source=${env:HOME}/.aws,target=/home/vscode/.aws,type=bind,consistency=cached",
        "source=${localWorkspaceFolder}/.devcontainer/.npmrc,target=/home/vscode/.npmrc,type=bind,consistency=cached",
        "source=${localWorkspaceFolder}/.devcontainer/.yarnrc,target=/home/vscode/.yarnrc,type=bind,consistency=cached",
        "source=${localWorkspaceFolder}/.devcontainer/.zshrc,target=/home/vscode/.zshrc,type=bind,consistency=cached",
        "source=${localWorkspaceFolder}/.devcontainer/openssl.conf,target=/etc/ssl/openssl.conf,type=bind,consistency=cached"
    ],
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    "forwardPorts": [
        5432,
        5050,
        5555,
        6379,
        8080
    ],
    "portsAttributes": {
        "5432": {
            "label": "Postgres"
        },
        "5050": {
            "label": "pgAdmin"
        },
        "5555": {
            "label": "Celery"
        },
        "6379": {
            "label": "Redis"
        },
        "8080": {
            "label": "WebApp"
        }
    },
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": ".devcontainer/postCreateCommand.sh",
    // Configure tool-specific properties.
    "customizations": { //Configure properties specific to VS Code.
        "vscode": { // Add the IDs of extenstions you want installed when the container is created}}
            "extensions": [
                "ms-vscode.vscode-typescript-next",
                "infeng.vscode-react-typescript",
                "firsttris.vscode-jest-runner",
                "AmazonWebServices.aws-toolkit-vscode",
                "LittleFoxTeam.vscode-python-test-adapter",
                "ms-vscode.makefile-tools",
                "ckolkman.vscode-postgres",
                "adpyke.vscode-sql-formatter",
                "charliermarsh.ruff",
                "cweijan.dbclient-jdbc",
                "cweijan.vscode-database-client2",
                "docsmsft.docs-yaml",
                "donjayamanne.githistory",
                "donjayamanne.python-environment-manager",
                "donjayamanne.python-extension-pack",
                "ecmel.vscode-html-css",
                "esbenp.prettier-vscode",
                "github.copilot",
                "github.copilot-chat",
                "hashicorp.terraform",
                "kevinrose.vsc-python-indent",
                "linhmtran168.mac-ca-vscode",
                "mechatroner.rainbow-csv",
                "mhutchie.git-graph",
                "mindaro-dev.file-downloader",
                "ms-azuretools.vscode-docker",
                "ms-edgedevtools.vscode-edge-devtools",
                "ms-kubernetes-tools.vscode-kubernetes-tools",
                "ms-python.autopep8",
                "ms-python.black-formatter",
                "ms-python.debugpy",
                "ms-python.flake8",
                "ms-python.gather",
                "ms-python.isort",
                "ms-python.mypy-type-checker",
                "ms-python.pylint",
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-toolsai.jupyter",
                "ms-toolsai.jupyter-keymap",
                "ms-toolsai.jupyter-renderers",
                "ms-toolsai.vscode-jupyter-cell-tags",
                "ms-toolsai.vscode-jupyter-slideshow",
                "ms-vscode-remote.remote-containers",
                "ms-vscode-remote.remote-ssh",
                "ms-vscode-remote.remote-ssh-edit",
                "ms-vscode-remote.remote-wsl",
                "ms-vscode-remote.vscode-remote-extensionpack",
                "ms-vscode.cmake-tools",
                "ms-vscode.hexeditor",
                "ms-vscode.onedrive-browser",
                "ms-vscode.remote-explorer",
                "ms-vscode.remote-server",
                "ms-vscode.theme-markdownkit",
                "ms-vscode.theme-materialkit",
                "ms-vscode.wordcount",
                "msjsdiag.vscode-react-native",
                "njpwerner.autodocstring",
                "redhat.vscode-yaml",
                "streetsidesoftware.code-spell-checker",
                "timonwong.shellcheck",
                "twxs.cmake",
                "ukoloff.win-ca",
                "visualstudioexptteam.intellicode-api-usage-examples",
                "visualstudioexptteam.vscodeintellicode",
                "vscode-icons-team.vscode-icons",
                "waderyan.gitblame",
                "wholroyd.jinja",
                "yzhang.markdown-all-in-one",
            ]
        }
    },
    "hostRequirements": {
        "gpu": "optional"
    }
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    // "remoteUser": "root"
}